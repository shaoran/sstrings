.\" Copyright 2005 by Pablo Yanez Trujillo <yanezp@informatk.uni-freiburg.de>
.\" The safe Strings Library Version 2.0.1
.\" 
.\" This is free software. Please read the file COPYING if you
.\" want to use/edit/distribuite this source file.
.\" This source file is protected by the GNU GPL-2
.\" NOTE: There is NO  warranty; not even for MERCHANTABILITY or 
.\" FITNESS FOR A PARTICULAR PURPOSE.
.TH "SS_STRING_NEW" "3" "September 2006" "Version 2.0.1" "Linux Programmer's Manual -- Safe Strings Library"
.SH "NAME"
ss_string_new - creates a new ss_string object
.SH "SYNOPSIS"
.B #include <sstrings2.h>

.B Linking with -lsstrings2
.sp
.BI "ss_string *ss_string_new(const char *"init ");"
.SH "DESCRIPTION"
This function creates a new \fBss_string\fR object where \fIinit\fR is the initial C-String to be saved.

The memory space for the string pointed by \fIinit\fR is allocated dynamically and it must be freed by the programmer
using \fBss_string_free\fR(3) or \fBss_string_gc_free\fR(3).

The memory space for the \fBss_string\fR object is allocated dynamically and it must be freed by the programmer
using \fBss_string_free\fR(3).

.SS "Returning value"

\fBss_string_new\fR return a pointer to a dynamically allocated \fBss_string\fR object, NULL if there is no memory left.

.SS "Error values for ss_errno"
\fISS_NOMEM\fR if there is no memory left

\fISS_NULL\fR if \fIinit\fR is NULL

.SH "BUGS"
Please report your bugs to yanezp@informatik.uni-freiburg.de

.SH "SEE ALSO"
.BR ss_string_free (3),
.BR ss_string_gc_free (3)
